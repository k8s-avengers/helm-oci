name: matrix
on:
  schedule:
    # every even hour, on minute 33
    - cron: '33 0-23/2 * * *'
  workflow_dispatch:

jobs:
  
  # Reads repos.yaml and generates a jsonmatrix of repos to process
  matrix_prep:
    name: "prepare job matrix"
    runs-on: ubuntu-latest
    steps:
      - { name: "Checkout build repo", uses: "actions/checkout@v4" }
      - { name: "setup python 3.11", uses: "actions/setup-python@v5", with: { python-version: "3.11" } }
      - { name: "install pip deps", run: "python3 -m venv .venv && .venv/bin/pip install -r requirements.txt" }
      - name: "Prepare"
        id: prepare
        run: |
          .venv/bin/python tooci/cli.py gha-matrix
    outputs: { jsonmatrix: "${{ steps.prepare.outputs.jsonmatrix }}" }
  
  build:
    permissions:
      packages: write # to write to ghcr.io
      contents: write # to commit to the repo (examples)
    needs: [ "matrix_prep" ] # depend on the matrix_prep job to get the jsonmatrix
    runs-on: "ubuntu-latest" # ${{ matrix.arch.runner }}
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        include: ${{ fromJSON(needs.matrix_prep.outputs.jsonmatrix) }}
    env:
      BASE_OCI_REF: "ghcr.io/${{ github.repository }}"
      UPDATE_HELM: "yes"
    name: "${{ matrix.id }}"
    
    steps:

      - { name: "Checkout build repo", uses: "actions/checkout@v4" }
      - { name: "setup python 3.11", uses: "actions/setup-python@v5", with: { python-version: "3.11" } }
      - { name: "install pip deps", run: "python3 -m venv .venv && .venv/bin/pip install -r requirements.txt" }
      - { name: "Setup Helm", uses: "azure/setup-helm@v4.0.0", with: { version: "3.14.1" } } # v4 only does not work?

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # GitHub username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # GitHub actions builtin token. repo has to have pkg access.

      - name: "Process ${{matrix.id}}"
        id: doit
        timeout-minutes: 5 # safe to assume if it's not done in 5 mins, it hanged; next run will finish it
        continue-on-error: true # let it progress so we can commit the info directory
        run: |
          git pull || true # install deps is slow; repo might have changed
          .venv/bin/python tooci/cli.py process --repo-id "${{ matrix.id }}"

      - name: Commit changes to the info directory ${{matrix.id}}
        id: commit
        run: |
          git config --global user.name "GHA workflow"
          git config --global user.email "workflow@github.com"
          git pull || true # repo might have changed since we started, avoid conflicts
          git add info || true
          git commit -m "Update info for ${{ matrix.id }}" || true
          git push || { echo "Push failed, retrying"; sleep $((1 + $RANDOM % 10)); git pull --rebase; git push; }
          git push || { echo "Push failed, retrying"; sleep $((1 + $RANDOM % 10)); git pull --rebase; git push; }
      
      # Exit with error if doit step failed
      - name: "Check for errors: ${{ steps.doit.outcome }} and ${{ steps.commit.outcome }}"
        if: ${{ steps.doit.outcome != 'success' }}
        run: exit 1
